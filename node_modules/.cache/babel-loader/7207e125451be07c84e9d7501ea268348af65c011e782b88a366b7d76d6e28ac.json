{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      email: '',\n      password: '',\n      errorState: false,\n      correctInfo: false\n    };\n  },\n  mounted() {},\n  computed: {\n    userData() {\n      return this.$store.state.userData;\n    }\n  },\n  methods: {\n    async login() {\n      // Send login data to backend for validation\n      await axios.post(`http://localhost:3000/api/auth/login`, {\n        email: this.email,\n        password: this.password\n      }).then(() => {\n        this.$store.commit('login');\n        this.loadTotalValues();\n        this.$router.push('/assets');\n      }).catch(() => {\n        // Handles incorrect login\n        this.errorState = true;\n      });\n    },\n    applyTheme() {\n      if (this.$store.state.userPrefs.theme === 0) {\n        this.$vuetify.theme.dark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n      } else if (this.$store.state.userPrefs.theme === 1) {\n        this.$vuetify.theme.dark = false;\n      } else if (this.$store.state.userPrefs.theme === 2) {\n        this.$vuetify.theme.dark = true;\n      }\n    }\n\n    // // This is to populate the total values in the NavMenu\n    // loadTotalValues() {\n    //     axios.get(`http://localhost:3000/api/assets`)\n    //     .then((resp) => {\n    //         this.assetData = resp.data\n    //         this.totalValue = 0\n    //         for (let asset of this.assetData) {\n    //             if (!asset.is_deleted) {\n    //                 this.totalValue += parseFloat(asset.value)\n    //             }\n    //         }\n    //         this.$store.commit('setTotalAssetValue', this.totalValue)\n    //     })\n\n    //     axios.get(`http://localhost:3000/api/debts`)\n    //     .then((resp) => {\n    //         this.debtData = resp.data\n    //         this.totalValue = 0\n    //         for (let debt of this.debtData) {\n    //             if (!debt.is_deleted) {\n    //                 this.totalValue += parseFloat(debt.value)\n    //             }\n    //         }\n    //         this.$store.commit('setTotalDebtValue', this.totalValue)\n    //     })\n    // }\n  }\n};","map":{"version":3,"names":["axios","name","data","email","password","errorState","correctInfo","mounted","computed","userData","$store","state","methods","login","post","then","commit","loadTotalValues","$router","push","catch","applyTheme","userPrefs","theme","$vuetify","dark","window","matchMedia","matches"],"sources":["src/components/Login.vue"],"sourcesContent":["<template>\r\n    <v-card class=\"pa-10 mx-auto mt-10 text-center\" width=\"330\">\r\n        <v-img eager src=\"../assets/logo64x64.png\" max-height=\"50\" max-width=\"50\" class=\"mx-auto\"></v-img>\r\n\r\n        <v-text-field class=\"mt-4\" label=\"Email\" v-model=\"email\" :error=\"errorState\"></v-text-field>\r\n        <v-text-field class=\"mb-4\" label=\"Password\" type=\"password\" v-model=\"password\" :error=\"errorState\" @keyup.enter=\"login\"></v-text-field>\r\n\r\n        <v-card-text v-if=\"errorState\" class=\"error--text pa-0\">Email or password does not match</v-card-text>\r\n        <v-btn v-if=\"errorState\" width=\"200\" small tile class=\"error mt-4\">Forgot Password?</v-btn>\r\n\r\n        <v-btn width=\"200\" tile class=\"primary my-4\" @click=\"login\">Log In</v-btn>\r\n        <v-btn width=\"200\" text tile class=\"font-weight-light\" @click=\"$router.push('/signup')\">Sign Up</v-btn>\r\n    </v-card>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    name: 'Login',\r\n\r\n    data() {\r\n        return {\r\n            email: '',\r\n            password: '',\r\n            errorState: false,\r\n            correctInfo: false,\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n\r\n    },\r\n    \r\n    computed: {\r\n        userData() { return this.$store.state.userData },\r\n    },\r\n\r\n    methods: {\r\n        async login() {\r\n            // Send login data to backend for validation\r\n            await axios.post(`http://localhost:3000/api/auth/login`, {\r\n                email: this.email,\r\n                password: this.password,\r\n            }).then(() => {\r\n                this.$store.commit('login')\r\n                this.loadTotalValues()\r\n                this.$router.push('/assets')\r\n            }).catch(() => {\r\n                // Handles incorrect login\r\n                this.errorState = true\r\n            })\r\n        },\r\n\r\n        applyTheme() {\r\n            if (this.$store.state.userPrefs.theme === 0) {\r\n                this.$vuetify.theme.dark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches\r\n            }\r\n            else if (this.$store.state.userPrefs.theme === 1){\r\n                this.$vuetify.theme.dark = false\r\n            }\r\n            else if (this.$store.state.userPrefs.theme === 2){\r\n                this.$vuetify.theme.dark = true\r\n            }\r\n        },\r\n\r\n        // // This is to populate the total values in the NavMenu\r\n        // loadTotalValues() {\r\n        //     axios.get(`http://localhost:3000/api/assets`)\r\n        //     .then((resp) => {\r\n        //         this.assetData = resp.data\r\n        //         this.totalValue = 0\r\n        //         for (let asset of this.assetData) {\r\n        //             if (!asset.is_deleted) {\r\n        //                 this.totalValue += parseFloat(asset.value)\r\n        //             }\r\n        //         }\r\n        //         this.$store.commit('setTotalAssetValue', this.totalValue)\r\n        //     })\r\n\r\n        //     axios.get(`http://localhost:3000/api/debts`)\r\n        //     .then((resp) => {\r\n        //         this.debtData = resp.data\r\n        //         this.totalValue = 0\r\n        //         for (let debt of this.debtData) {\r\n        //             if (!debt.is_deleted) {\r\n        //                 this.totalValue += parseFloat(debt.value)\r\n        //             }\r\n        //         }\r\n        //         this.$store.commit('setTotalDebtValue', this.totalValue)\r\n        //     })\r\n        // }\r\n    }\r\n}\r\n</script>"],"mappings":";AAgBA,OAAAA,KAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACA;MACAC,KAAA;MACAC,QAAA;MACAC,UAAA;MACAC,WAAA;IACA;EACA;EAEAC,QAAA,GAEA;EAEAC,QAAA;IACAC,SAAA;MAAA,YAAAC,MAAA,CAAAC,KAAA,CAAAF,QAAA;IAAA;EACA;EAEAG,OAAA;IACA,MAAAC,MAAA;MACA;MACA,MAAAb,KAAA,CAAAc,IAAA;QACAX,KAAA,OAAAA,KAAA;QACAC,QAAA,OAAAA;MACA,GAAAW,IAAA;QACA,KAAAL,MAAA,CAAAM,MAAA;QACA,KAAAC,eAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;MACA,GAAAC,KAAA;QACA;QACA,KAAAf,UAAA;MACA;IACA;IAEAgB,WAAA;MACA,SAAAX,MAAA,CAAAC,KAAA,CAAAW,SAAA,CAAAC,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA,CAAAE,IAAA,GAAAC,MAAA,CAAAC,UAAA,IAAAD,MAAA,CAAAC,UAAA,iCAAAC,OAAA;MACA,OACA,SAAAlB,MAAA,CAAAC,KAAA,CAAAW,SAAA,CAAAC,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA,CAAAE,IAAA;MACA,OACA,SAAAf,MAAA,CAAAC,KAAA,CAAAW,SAAA,CAAAC,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA,CAAAE,IAAA;MACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}