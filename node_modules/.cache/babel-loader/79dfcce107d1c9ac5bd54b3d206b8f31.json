{"ast":null,"code":"import Vue from 'vue';\nimport App from './App.vue';\nimport vuetify from './plugins/vuetify';\nimport VueApexCharts from 'vue-apexcharts';\nimport store from './store/store';\nimport router from './router/index';\nimport axios from 'axios';\naxios.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  config.withCredentials = true;\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n});\nVue.use(VueApexCharts);\nVue.component('apexchart', VueApexCharts);\nVue.config.productionTip = false;\n\n// Filters\n\nVue.filter('toCurrency', function (value) {\n  if (typeof value !== \"number\") {\n    return value;\n  }\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  });\n  return formatter.format(value);\n});\nnew Vue({\n  store,\n  vuetify,\n  router,\n  render: h => h(App)\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","vuetify","VueApexCharts","store","router","axios","interceptors","request","use","config","withCredentials","error","Promise","reject","component","productionTip","filter","value","formatter","Intl","NumberFormat","style","currency","format","render","h","$mount"],"sources":["C:/Users/crole/Documents/vufi/src/main.js"],"sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport vuetify from './plugins/vuetify'\r\nimport VueApexCharts  from 'vue-apexcharts'\r\nimport store from './store/store'\r\nimport router from './router/index'\r\nimport axios from 'axios'\r\n\r\naxios.interceptors.request.use(\r\n    function(config) {\r\n      // Do something before request is sent\r\n      config.withCredentials = true;\r\n      return config;\r\n    },\r\n    function(error) {\r\n      // Do something with request error\r\n      return Promise.reject(error);\r\n    }\r\n);\r\n\r\nVue.use(VueApexCharts)\r\nVue.component('apexchart', VueApexCharts)\r\n\r\nVue.config.productionTip = false\r\n\r\n// Filters\r\n\r\nVue.filter('toCurrency', function (value) {\r\n    if (typeof value !== \"number\") {\r\n        return value;\r\n    }\r\n    var formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD'\r\n    });\r\n    return formatter.format(value);\r\n});\r\n\r\nnew Vue({\r\n    store,\r\n    vuetify,\r\n    router,\r\n    render: h => h(App)\r\n}).$mount('#app')"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,aAAa,MAAO,gBAAgB;AAC3C,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1B,UAASC,MAAM,EAAE;EACf;EACAA,MAAM,CAACC,eAAe,GAAG,IAAI;EAC7B,OAAOD,MAAM;AACf,CAAC,EACD,UAASE,KAAK,EAAE;EACd;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CACJ;AAEDZ,GAAG,CAACS,GAAG,CAACN,aAAa,CAAC;AACtBH,GAAG,CAACe,SAAS,CAAC,WAAW,EAAEZ,aAAa,CAAC;AAEzCH,GAAG,CAACU,MAAM,CAACM,aAAa,GAAG,KAAK;;AAEhC;;AAEAhB,GAAG,CAACiB,MAAM,CAAC,YAAY,EAAE,UAAUC,KAAK,EAAE;EACtC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC3B,OAAOA,KAAK;EAChB;EACA,IAAIC,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;IAC3CC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE;EACd,CAAC,CAAC;EACF,OAAOJ,SAAS,CAACK,MAAM,CAACN,KAAK,CAAC;AAClC,CAAC,CAAC;AAEF,IAAIlB,GAAG,CAAC;EACJI,KAAK;EACLF,OAAO;EACPG,MAAM;EACNoB,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAACzB,GAAG;AACtB,CAAC,CAAC,CAAC0B,MAAM,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module"}