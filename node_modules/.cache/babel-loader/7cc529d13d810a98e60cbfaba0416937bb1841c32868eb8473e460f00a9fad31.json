{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport VuexPersistence from 'vuex-persist';\nimport axios from 'axios';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  plugins: [new VuexPersistence({\n    storage: window.sessionStorage\n  }).plugin],\n  state: {\n    isLoggedIn: false,\n    userPrefs: {\n      theme: 0,\n      currency: 'USD'\n    },\n    notification: {\n      text: '',\n      color: ''\n    },\n    allAssets: [],\n    allHistory: [],\n    totalPositiveAssets: 0,\n    totalNegativeAssets: 0\n  },\n  getters: {},\n  mutations: {\n    login(state) {\n      state.isLoggedIn = true;\n    },\n    setUserPrefs(state, data) {\n      state.userPrefs = data;\n    },\n    logOut(state) {\n      state.isLoggedIn = false;\n      state.userPrefs = {\n        theme: 0,\n        currency: 'USD'\n      };\n    },\n    setNotification(state, data) {\n      state.notification = data;\n    },\n    setAllAssets(state, data) {\n      state.allAssets = data;\n    },\n    setAllHistory(state, data) {\n      state.allHistory = data;\n    },\n    setTotalPositiveAssets(state, data) {\n      state.totalPositiveAssets = data;\n    },\n    setTotalNegativeAssets(state, data) {\n      state.totalNegativeAssets = data;\n    }\n  },\n  actions: {\n    async getAllAssetData() {\n      // Get raw asset data\n      axios.get(`http://localhost:3000/api/assets/all`).then(resp => {\n        let allAssets = resp.data;\n\n        // Set total values\n        if (allAssets.length) {\n          let totalPositiveAssets = 0;\n          let totalNegativeAssets = 0;\n          for (let asset of allAssets) {\n            if (!asset.is_deleted) {\n              if (asset.is_debt) {\n                totalNegativeAssets += parseFloat(asset.value);\n              } else {\n                totalPositiveAssets += parseFloat(asset.value);\n              }\n            }\n          }\n          this.commit('setTotalPositiveAssets', totalPositiveAssets);\n          this.commit('setTotalNegativeAssets', totalNegativeAssets);\n          this.commit('setAllAssets', allAssets);\n        }\n        axios.get(`http://localhost:3000/api/assets/history/all`).then(resp => {\n          let allHistory = resp.data;\n          this.commit('setAllHistory', allHistory);\n        });\n      }).catch(() => {\n        this.$router.push('/404');\n      });\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","VuexPersistence","axios","use","Store","plugins","storage","window","sessionStorage","plugin","state","isLoggedIn","userPrefs","theme","currency","notification","text","color","allAssets","allHistory","totalPositiveAssets","totalNegativeAssets","getters","mutations","login","setUserPrefs","data","logOut","setNotification","setAllAssets","setAllHistory","setTotalPositiveAssets","setTotalNegativeAssets","actions","getAllAssetData","get","then","resp","length","asset","is_deleted","is_debt","parseFloat","value","commit","catch","$router","push"],"sources":["C:/Users/crole/Documents/vufi/src/store/store.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport VuexPersistence from 'vuex-persist'\r\nimport axios from 'axios'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n    plugins: [new VuexPersistence({\r\n        storage: window.sessionStorage\r\n    }).plugin],\r\n\r\n    state: {\r\n        isLoggedIn: false,\r\n\r\n        userPrefs: {\r\n            theme: 0,\r\n            currency: 'USD'\r\n        },\r\n\r\n        notification: {\r\n            text: '',\r\n            color: ''\r\n        },\r\n\r\n        allAssets: [],\r\n        allHistory: [],\r\n\r\n        totalPositiveAssets: 0,\r\n        totalNegativeAssets: 0,\r\n    },\r\n\r\n    getters: {\r\n\r\n    },\r\n\r\n    mutations: {\r\n        login(state) {\r\n            state.isLoggedIn = true\r\n        },\r\n\r\n        setUserPrefs(state, data) { state.userPrefs = data },\r\n\r\n        logOut(state) {\r\n            state.isLoggedIn = false\r\n\r\n            state.userPrefs = {\r\n                theme: 0,\r\n                currency: 'USD'\r\n            }\r\n        },\r\n\r\n        setNotification(state, data) { state.notification = data },\r\n\r\n        setAllAssets(state, data) {\r\n            state.allAssets = data\r\n        },\r\n\r\n        setAllHistory(state, data) {\r\n            state.allHistory = data\r\n        },\r\n\r\n        setTotalPositiveAssets(state, data) {\r\n            state.totalPositiveAssets = data\r\n        },\r\n\r\n        setTotalNegativeAssets(state, data) {\r\n            state.totalNegativeAssets = data\r\n        },\r\n    },\r\n\r\n    actions: {\r\n        async getAllAssetData() {\r\n            // Get raw asset data\r\n            axios.get(`http://localhost:3000/api/assets/all`)\r\n            .then(resp => {\r\n                let allAssets = resp.data\r\n                \r\n                // Set total values\r\n                if (allAssets.length) {\r\n                    let totalPositiveAssets = 0\r\n                    let totalNegativeAssets = 0\r\n\r\n                    for (let asset of allAssets) {\r\n                        if (!asset.is_deleted) {\r\n                            if (asset.is_debt) {\r\n                                totalNegativeAssets += parseFloat(asset.value)\r\n                            }\r\n                            else {\r\n                                totalPositiveAssets += parseFloat(asset.value)\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                    this.commit('setTotalPositiveAssets', totalPositiveAssets)\r\n                    this.commit('setTotalNegativeAssets', totalNegativeAssets)\r\n                    this.commit('setAllAssets', allAssets)\r\n                }\r\n\r\n                axios.get(`http://localhost:3000/api/assets/history/all`)\r\n                .then(resp => {\r\n                    let allHistory = resp.data\r\n                    this.commit('setAllHistory', allHistory)\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.$router.push('/404')\r\n            })\r\n        },\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}